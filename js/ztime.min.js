class zTime {
    constructor(obj1) {
        if (!("el" in obj1)) {
            throw`请传入id选择器 如 el:"input1"`
        }
        if ("type" in obj1) {
            if (Number.parseInt(obj1.type) == NaN) {
                throw`类型只能传入整数,如1为年，5为年月日时分`
            }
        }
        let {el, type = 3, startYear = 2000, endYear = 2025, format = "-"} = obj1;
        let data = {startY: 0, endY: 0, flag: false, top: 0,};
        let el1 = document.getElementById(el);
        let content = document.createElement('div');
        content.className = "ztimeMask";
        document.body.appendChild(content);
        let mainCon = "";
        mainCon += `<div class="ztimeMaskSun"><ul class="ztimeMaskTitle">`;
        if (type >= 1) {
            mainCon += `<li></li>`;
            if (type >= 2) {
                mainCon += `<li></li>`;
                if (type >= 3) {
                    mainCon += `<li></li>`;
                    if (type >= 4) {
                        mainCon += `<li></li>`;
                        if (type >= 5) {
                            mainCon += `<li></li>`
                        }
                    }
                }
            }
        }
        mainCon += `</ul><div class="ztimeHeader"><a class="zTimeNo">取消</a><a class="zTimeYes">确定</a></div><div class="ztimeBody">`;
        type = type < 1 || type > 5 ? 3 : type;
        if (type >= 1) {
            let zYearCon = "";
            zYearCon += `<ul class="zYear ztimeBodyAll"top="0"month="1">`;
            for (let i = startYear; i <= endYear; i++) {
                zYearCon += `<li>${i}</li>`
            }
            zYearCon += `</ul>`;
            if (type >= 2) {
                zYearCon += `<ul class="zMonth ztimeBodyAll"top="0"month="1">`;
                for (let i = 1; i <= 12; i++) {
                    if (i < 10) {
                        i = "0" + i
                    }
                    zYearCon += `<li>${i}</li>`
                }
                zYearCon += `</ul>`;
                if (type >= 3) {
                    zYearCon += `<ul class="zDay ztimeBodyAll"top="0">`;
                    for (let i = 1; i <= 31; i++) {
                        if (i < 10) {
                            i = "0" + i
                        }
                        zYearCon += `<li>${i}</li>`
                    }
                    zYearCon += `</ul>`;
                    if (type >= 4) {
                        zYearCon += `<ul class="zHour ztimeBodyAll"top="0">`;
                        for (let i = 1; i <= 24; i++) {
                            if (i < 10) {
                                i = "0" + i
                            }
                            zYearCon += `<li>${i}</li>`
                        }
                        zYearCon += `</ul>`;
                        if (type >= 5) {
                            zYearCon += `<ul class="zMinute ztimeBodyAll"top="0">`;
                            for (let i = 0; i <= 59; i++) {
                                if (i < 10) {
                                    i = "0" + i
                                }
                                zYearCon += `<li>${i}</li>`
                            }
                            zYearCon += `</ul>`
                        }
                    }
                }
            }
            zYearCon += `</div></div>`;
            mainCon += zYearCon;
            content.innerHTML = mainCon
        } else {
        }
        let timeBodyAll = content.getElementsByClassName("ztimeBodyAll");
        (function () {
            let currentTimeArr = [];
            let currentTime = new Date();
            currentTimeArr.push(-(currentTime.getFullYear() - startYear - 1) * 70);
            if (type >= 2) {
                currentTimeArr.push(-(currentTime.getMonth() - 1) * 70);
                if (type >= 3) {
                    currentTimeArr.push(-(currentTime.getDate() - 2) * 70);
                    if (type >= 4) {
                        currentTimeArr.push(-(currentTime.getHours() - 2) * 70);
                        if (type >= 5) {
                            currentTimeArr.push(-(currentTime.getMinutes() - 1) * 70)
                        }
                    }
                }
            }
            currentTimeArr.forEach(function (e, i) {
                timeBodyAll[i].setAttribute("top", e);
                timeBodyAll[i].style.transform = `translateY(${e}px)`
            })
        })();
        let that = this;
        let start = function (event) {
            data.startY = event.touches[0].pageY;
            event.preventDefault();
            return false
        };
        let end = function (event) {
            data.endY = event.changedTouches[0].pageY;
            event.preventDefault();
            return false
        };
        let move = function (event) {
            data.endY = event.changedTouches[0].pageY;
            let h = this.querySelectorAll("li").length * 70 - 100;
            if (data.startY > data.endY) {
                if (data.flag) {
                    setTimeout(function () {
                        data.flag = false
                    }, 100);
                    return
                }
                data.flag = true;
                let top = parseInt(this.getAttribute("top")) - 70;
                if (top < -h) {
                    top = parseInt(this.getAttribute("top"))
                }
                this.style.transform = `translateY(${top}px)`;
                this.setAttribute("top", top);
                this.style.transition = 'all .1s';
                if (this.getAttribute("month") == 1) {
                    that.days(content)
                }
            } else {
                if (data.flag) {
                    setTimeout(function () {
                        data.flag = false
                    }, 100);
                    return
                }
                data.flag = true;
                let top = parseInt(this.getAttribute("top")) + 70;
                if (top > 70) {
                    top = parseInt(this.getAttribute("top"))
                }
                this.style.transform = `translateY(${top}px)`;
                this.setAttribute("top", top);
                this.style.transition = 'all .5s';
                if (this.getAttribute("month") == 1) {
                    that.days(content)
                }
            }
            event.preventDefault();
            return false
        };
        for (let e of timeBodyAll) {
            e.addEventListener("touchmove", move);
            e.addEventListener("touchstart", start);
            e.addEventListener("touchend", end)
        }
        el1.onclick = function () {
            content.style.display = "block";
            content.style.animation = "zfadeIn 1s"
        };
        let zTimeNo = content.getElementsByClassName("zTimeNo")[0];
        let zTimeYes = content.getElementsByClassName("zTimeYes")[0];
        document.body.addEventListener('touchmove', function (e) {
            if (e._isScroller)return;
            e.preventDefault()
        }, {passive: false});
        zTimeNo.addEventListener("click", function () {
            this.parentNode.parentNode.parentNode.style.display = "none"
        });
        zTimeYes.addEventListener("click", function () {
            let thisTimeBodyAll = this.parentNode.parentNode.parentNode.lastChild.getElementsByClassName("ztimeBodyAll");
            let inputText = [];
            let inputTextStr = "";
            for (let i of thisTimeBodyAll) {
                inputText.push(that.index(i.getAttribute("top"), i))
            }
            if (type >= 4) {
                for (let i = 0; i < inputText.length; i++) {
                    if (i > 2) {
                        if (i == 3) {
                            inputTextStr += `${inputText[i]}:`;
                            continue
                        }
                        inputTextStr += `${inputText[i]}`;
                        continue
                    }
                    if (i == 2) {
                        inputTextStr += `${inputText[i]}`;
                        continue
                    }
                    inputTextStr += `${inputText[i]}${format}`
                }
            } else {
                inputTextStr = inputText.join(format)
            }
            el1.value = inputTextStr;
            this.parentNode.parentNode.parentNode.style.display = "none"
        })
    };

    days(content) {
        let zYear = content.getElementsByClassName("zYear")[0];
        let yearText = this.index(zYear.getAttribute("top"), zYear);
        let zMonth = content.getElementsByClassName("zMonth")[0];
        let monthText = this.index(zMonth.getAttribute("top"), zMonth);
        let days = new Date(yearText, monthText, 0).getDate();
        let zDay = content.getElementsByClassName("zDay")[0];
        let zDayTop = zDay.getAttribute("top");
        zDay.innerHTML = "";
        for (let i = 1; i <= days; i++) {
            if (i < 10) {
                i = "0" + i
            }
            zDay.innerHTML += `<li>${i}</li>`
        }
        if (days < 31) {
            if (days == 30) {
                if (zDayTop < -1960) {
                    zDayTop = -1960
                }
            } else if (days == 29) {
                if (zDayTop < -1890) {
                    zDayTop = -1890
                }
            } else if (days == 28) {
                if (zDayTop < -1820) {
                    zDayTop = -1820
                }
            }
        }
        zDay.setAttribute("top", zDayTop);
        zDay.style.transform = `translateY(${zDayTop}px)`;
        zDay.style.transition = "all .5s"
    }

    index(top, that) {
        let thisIndex = "";
        if (top == 70) {
            thisIndex = 1
        } else if (top == 0) {
            thisIndex = 2
        } else if (top < 0) {
            thisIndex = Math.abs(top / 70) + 2
        }
        return that.querySelectorAll("li")[thisIndex - 1].innerText
    }
}
;